version: "3.8"

services:
  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      # CORRECTED: Use the environment variable for the user, not a hardcoded value.
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      start_period: 10s
      interval: 5s
      retries: 5
      timeout: 5s
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  # Adminer Service
  adminer:
    image: adminer
    container_name: adminer_ui
    restart: always
    ports:
      - "8081:8080" # Access Adminer UI at http://localhost:8081
    depends_on:
      db:
        condition: service_healthy
    environment:
      ADMINER_DEFAULT_SERVER: db
    networks:
      - app-network
  # Cloudflare Tunnel Service
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare_tunnel
    restart: always
    depends_on:
      db:
        condition: service_healthy # Wait for the database to be ready
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
